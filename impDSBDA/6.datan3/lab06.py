import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv('newIRIS.csv')
print(data.head())
print(data.shape)
print(data.info())
print(data.describe())
print(data.isnull().sum())
print("Defining X & Y")
X = data.drop(['species'], axis=1)
y = data.drop(['sepal_length', 'sepal_width', 'petal_length', 'petal_width'], axis=1)
print(X)
print(y)
print(X.shape)
print(y.shape)
print("Train and Test")
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=True)
print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
print("Gaussian Naive Bayes")
from sklearn.naive_bayes import GaussianNB
model = GaussianNB()
model.fit(X_train, y_train)
print("Accuracy")
from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay
y_pred = model.predict(X_test)
model.score(X_test,y_test)
print(accuracy_score(y_test, y_pred))
cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix = cm)
print("Confusion matrix:")
print(cm)
disp.plot()
plt.show()
def get_confusion_matrix_values(y_true, y_pred):
 cm = confusion_matrix(y_true, y_pred)
 return(cm[0][0], cm[0][1], cm[1][0], cm[1][1])
TP, FP, FN, TN = get_confusion_matrix_values(y_test, y_pred)
print("TP: ", TP)
print("FP: ", FP)
print("FN: ", FN)
print("TN: ", TN)
print("The Accuracy is ", (TP+TN)/(TP+TN+FP+FN))
print("The precision is ", TP/(TP+FP))
print("The recall is ", TP/(TP+FN))
print("The F1 score is ",2 * (TP/(TP+FN)* TP/(TP+FN))/(TP/(TP+FN)+ TP/(TP+FN)))
